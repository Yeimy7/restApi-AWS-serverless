service: final-prueba
frameworkVersion: '3'

custom:
  tableName: 'todo-table-${sls:stage}'

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ TodoTable, Arn ]
  environment:
    TODO_TABLE: ${self:custom.tableName}

functions:
  create:
    handler: handler/createTodo.createTodo
    events:
      - http:
          path: todos
          method: post
          cors: true
  list:
    handler: handler/listTodos.listTodos
    events:
      - http:
          path: todos/list
          method: get
          cors: true
  get:
    handler: handler/getTodo.getTodo
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true
  update:
    handler: handler/updateTodo.updateTodo
    events:
      - http:
          path: todos/update/{id}
          method: put
          cors: true
  delete:
    handler: handler/deleteTodo.deleteTodo
    events:
      - http:
          path: todos/delete/{id}
          method: delete
          cors: true
  rest-api:
    handler: index.restApi
    events: 
      - http:
          path: todos/all
          method: post
          cors: true
resources:
  Resources:
    TodoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
package: 
  exclude: 
    - rest/**